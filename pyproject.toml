[build-system]
requires = ["hatchling", "hatch-vcs", "nipreps-versions", "cython", "numpy"]
build-backend = "hatchling.build"

[project]
name = "qsirecon"
description = "qsirecon builds workflows for reconstructing q-space images"
readme = "long_description.rst"
authors = [{name = "The PennLINC developers"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.10",
]
license = {file = "LICENSE"}
requires-python = ">=3.10"
dependencies = [
    'importlib_resources; python_version < "3.11"',
    "dipy>=1.8.0,<1.9.0",
    "dmri-amico == 1.5.4",
    "filelock",
    "fury",
    "indexed_gzip <= 1.8.7",
    "Ingress2QSIRecon == 0.2.1",
    "jinja2 < 3.1",
    "matplotlib",
    "networkx ~= 2.8.8",
    "nibabel <= 6.0.0",
    "nilearn == 0.10.1",
    "nipype == 1.8.6",
    "nireports ~= 24.0.2",
    "niworkflows >=1.9,<= 1.10",
    "numpy <= 1.26.3",
    "packaging",  # for version string parsing
    "pandas < 2.0.0",
    "psutil <= 5.9.8",
    "pyAFQ == 1.3.2",
    "pybids",
    "pyyaml",
    "scikit-image",
    "scikit-learn <= 1.4.0",
    "seaborn",
    "sentry_sdk",
    "SimpleITK",
    "svgutils <= 0.3.4",
    "transforms3d",
    "vtk",
    "xvfbwrapper",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/pennlinc/qsirecon"
Documentation = "https://www.qsirecon.readthedocs.io"
Paper = "https://doi.org/10.1038/s41592-022-01458-7"
"Docker Images" = "https://hub.docker.com/r/pennlinc/qsirecon/tags/"

[project.optional-dependencies]
doc = [
    "dipy",
    "doctest-ignore-unicode",
    "lxml_html_clean",
    "nbsphinx",
    "pydot >= 1.2.3",
    "pydotplus",
    "recommonmark",
    "sphinx >= 4.2.0",
    "sphinx-argparse",
    "sphinx_markdown_tables",
    "sphinx_rtd_theme",
    "sphinxcontrib-apidoc",
    "sphinxcontrib-bibtex",
]
tests = [
    "coverage",
    "pytest",
    "pytest-cov",
    "pytest-env",
]
maint = [
    "fuzzywuzzy",
    "python-Levenshtein",
]

# Aliases
all = ["qsirecon[doc,maint,tests]"]

[project.scripts]
qsirecon = "qsirecon.cli.run:main"
mif2fib = "qsirecon.cli.convertODFs:mif_to_fib"
fib2mif = "qsirecon.cli.convertODFs:fib_to_mif"
qsirecon_group_report = "qsirecon.cli.group_report:aggregate_reports"
recon_plot = "qsirecon.cli.recon_plot:recon_plot"

#
# Hatch configurations
#

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]  # No longer needed in sdist

[tool.hatch.build.targets.wheel]
packages = ["qsirecon"]
exclude = [
    "qsirecon/tests/data",  # Large test data directory
]

##  The following two sections configure setuptools_scm in the hatch way

[tool.hatch.version]
source = "vcs"
# raw-options = { version_scheme = "nipreps-calver" }

[tool.hatch.build.hooks.vcs]
version-file = "qsirecon/_version.py"

#
# Developer tool configurations
#

[tool.black]
line-length = 99
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.github
    | \.hg
    | \.pytest_cache
    | _build
    | build
    | dist
  )/
  | qsirecon/_version.py
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["isort", "test"]
known_local_folder = ["qsirecon"]

[tool.flake8]
max-line-length = "99"
doctests = "False"
exclude = [
    "*build/",
    "qsirecon/_version.py",
    "qsirecon/_warnings.py",
    "qsirecon/config.py",
    "qsirecon/data/",
    "qsirecon/tests/",
    "qsirecon/utils/sentry.py",
]
ignore = ["D107", "E203", "E402", "E722", "W503", "N803", "N806", "N815", "W605"]
per-file-ignores = [
    "**/__init__.py : F401",
    "docs/conf.py : E265",
]

[tool.pytest.ini_options]
addopts = '-m "not integration"'
markers = [
    "integration: integration tests to skip by default",
    "mrtrix_singleshell_ss3t_act: test 1",
    "mrtrix_singleshell_ss3t_noact: test 2",
    "amico_noddi: test 5",
    "dipy_mapmri: test 7",
    "dipy_dki: test 8",
    "scalar_mapper: test 17",
    "pyafq_recon_external_trk: test 18",
    "pyafq_recon_full: test 19",
    "mrtrix3_recon: test 20",
    "tortoise_recon: test 21",
    "autotrack: test 22",
]
env = [
    "RUNNING_PYTEST = 1",
]

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/conftest.py",
    "qsirecon/_version.py"
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    'raise NotImplementedError',
    'warnings\.warn',
]
